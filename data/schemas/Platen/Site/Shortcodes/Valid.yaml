# yaml-language-server: $schema=https://json-schema.org/draft/2020-12/schema
$schema: https://json-schema.org/draft/2020-12/schema
$id: /schemas/Platen/Site/Shortcodes/Valid.schema.yaml
title: Defining a Registered Shortcode
description: Defines the minimal properties for a Platen-aware shortcode
schematize:
  details: |
    Defines the minimal properties a theme developer needs to define for a shortcode to integrate
    with Platen's configuration, automatically and dynamically loading styles without requiring the
    end users to update their own site configuration or assets. and adding site-level control over
    the shortcode behaviors.

    Platen, through the site configuration, keeps a registry of integrated shortcodes. This enables
    site authors and theme developers to discover, enable, disable, and configure shortcodes in a
    friendlier way than Hugo's default, without preventing Hugo's built-in behavior.

    At a minimum, every registered shortcode must define the [sref:`Enabled`] setting. If the
    shortcode has specific styling needs, it must define the [sref:`Style`] setting with the
    [sref:`Name`] property set to the name of the style module in `assets/styles/shortcodes`, like
    `tabs` for the style module at `assets/styles/shortcodes/_tabs.scss`.

    A registered shortcode's style asset **must** be placed in the `assets/styles/shortcodes`
    folder.

    In addition to these properties, any registered shortcode may define any other settings that
    make sense for it. Theme developers should use these settings to provide sensible defaults that
    are meant to be overridden.

    For more information on developing a registered shortcode for Platen, see
    [Defining a Registered Shortcode][01] in the [Theme Guide][02].

    <!-- Link References -->
    [01]: /styling
    [02]: /styling
    [sref:`Enabled`]: Platen.Site.Shortcodes.Valid.Enabled
    [sref:`Style`]: Platen.Site.Shortcodes.Valid.Style
    [sref:`Name`]: Platen.Site.Shortcodes.Valid.Style.Name
type: object
required:
  - Enabled
properties:
  Enabled:
    title: Enable the Shortcode
    description: Whether to enable the shortcode for the site
    schematize:
      weight: 1
      details: |
        Defines whether to enable the shortcode for the site. This value usually defaults
        to `true`. When this value is set to `false`, the configuration and styling for the
        shortcode is disabled and Platen raises an error when the shortcode is used.
    type: boolean
    default: true
  Style:
    title: Shortcode Style Settings
    description: Defines the settings for the shortcode's styling
    schematize:
      weight: 2
      skipSchemaRender: true
      details: |
        Defines the settings for the shortcode's styling. This setting can be omitted if the
        shortcode has no specific styling needs (if it relies on existing or otherwise
        defined CSS or SCSS values to style its output).

        If it needs its own SCSS, add the module to the `assets/styles/shortcodes` folder
        and set [sref:`Name`] to the SCSS module's name, like `foo` for
        `assets/styles/shortcodes/_foo.scss`.

        You can define any other key-value pairs here, which can then used in the
        shortcode's style module when rendered as a template.

        [sref:`Name`]: Platen.Site.Config.Shortcodes
    type: object
    required:
      - Name
    properties:
      Name:
        title: Shortcode Style Module Name
        description: Specifies the name of the shortcode's style module
        schematize:
          details: |
            Specifies the name of the shortcode's style module in the
            `assets/styles/shortcodes` folder. Omit the leading `_` and trailing `.scss`.
            For example, the name for the style module `assets/styles/shortcodes/_foo.scss`
            is `foo`.
        type: string
