# yaml-language-server: $schema=https://json-schema.org/draft/2020-12/schema
$schema: https://json-schema.org/draft/2020-12/schema
$id: /schemas/Platen/Site/Theme/Styles/Utils.schema.yaml
title: Utils Style Modules
description: Defines the map of utility SCSS style modules for the theme.
schematize:
  details: |
    Defines the map of utility SCSS style modules for the theme. The existing value is a map
    of styles that are loaded first for the theme and set defaults for the presentation.

    You can add new keys or replace the values for existing ones. You don't need to keep the
    full list of all styles in your own configuration file. Only specify the values you want
    to add or replace.

    For more information on authoring SCSS style modules, see [the SCSS documentation].

    [the SCSS documentation]: https://sass-lang.com/documentation/at-rules/use
type: object
properties:
  Basic:
    title: Basic Utilities
    description: Defines the ? style for ?.
    schematize:
      weight: 1
      skipSchemaRender: true
      details: |
        Defines the utility classes for the theme. By default, the only setting for this property is
        [sref:`Enabled`], which defaults to `true`. If you set [sref:`Enabled`] to `false`, this
        style isn't applied to the site.

        With [sref:`Enabled`] set to `true`, Platen applies the following style to the site:

        ```scss
        .flex {
          display: flex;
        }

        .flex-auto {
          flex: 1 1 auto;
        }

        .flex-even {
          flex: 1 1;
        }

        .flex-wrap {
          flex-wrap: wrap;
        }

        .justify-start {
          justify-content: flex-start;
        }

        .justify-end {
          justify-content: flex-end;
        }

        .justify-center {
          justify-content: center;
        }

        .justify-between {
          justify-content: space-between;
        }

        .align-center {
          align-items: center;
        }

        .mx-auto {
          margin: 0 auto;
        }

        .text-center {
          text-align: center;
        }

        .text-left {
          text-align: left;
        }

        .text-right {
          text-align: right;
        }

        .hidden {
          display: none;
        }
        ```

        This adds settings for several different utility classes for convenience.

        You can overwrite this definition for your own site or theme by creating the file
        `styles/platen/_.scss` in your [assets folder], which defaults to `assets` in
        your project root.

        ```details { .danger summary="Careful!" }
        Note that if you create this file, it _entirely overwrites_ the default from the theme.
        ```

        For more information on authoring SCSS, see the [learning guide].

        [assets folder]: https://gohugo.io/getting-started/directory-structure/#directory-structure-explained
        [learning guide]: https://sass-lang.com/guide
        [sref:`Enabled`]: Platen.Site.Theme.Styles.Defined.Enabled
    type: object
  Toggle:
    title: Toggle Utilities
    description: Defines a utility for inputs that toggle behavior.
    schematize:
      weight: 100
      skipSchemaRender: true
      details: |
        Defines a utility for inputs that toggle behavior. By default, the only setting for this
        property is [sref:`Enabled`], which defaults to `true`. If you set [sref:`Enabled`] to
        `false`, this style isn't applied to the site.

        With [sref:`Enabled`] set to `true`, Platen applies the following style to the site:

        ```scss
        input.toggle {
          height: 0;
          width: 0;
          overflow: hidden;
          opacity: 0;
          position: absolute;
        }
        ```

        This applies to `input` elements with the `toggle` class, which is used for:

        - collapsible items in the navigation menu
        - the site menu and table of contents buttons in mobile view
        - the multilingual language picker
        - the `tabs` shortcode

        It sets the height, width, and transparency to `0`, hides the overflow, and uses absolute
        positioning by default.

        You can overwrite this definition for your own site or theme by creating the file
        `styles/platen/_.scss` in your [assets folder], which defaults to `assets` in
        your project root.

        ```details { .danger summary="Careful!" }
        Note that if you create this file, it _entirely overwrites_ the default from the theme.
        ```

        For more information on authoring SCSS, see the [learning guide].

        [assets folder]: https://gohugo.io/getting-started/directory-structure/#directory-structure-explained
        [learning guide]: https://sass-lang.com/guide
        [sref:`Enabled`]: Platen.Site.Theme.Styles.Defined.Enabled
    type: object
  Clearfix:
    title: Clearfix Utilities
    description: Defines the clearfix behavior.
    schematize:
      weight: 3
      skipSchemaRender: true
      details: |
        Defines the clearfix. By default, the only setting for this property is [sref:`Enabled`],
        which defaults to `true`. If you set [sref:`Enabled`] to `false`, this style isn't applied
        to the site.

        With [sref:`Enabled`] set to `true`, Platen applies the following style to the site:

        ```scss
        .clearfix::after {
          content: "";
          display: table;
          clear: both;
        }
        ```

        This applies to any element with the `clearfix` class, ensuring that the element is not
        floated beside any others in the container and the next element is displayed after it in
        a new row/line.

        You can overwrite this definition for your own site or theme by creating the file
        `styles/utils/_clearfix.scss` in your [assets folder], which defaults to `assets` in
        your project root.

        ```details { .danger summary="Careful!" }
        Note that if you create this file, it _entirely overwrites_ the default from the theme.
        ```

        For more information on authoring SCSS, see the [learning guide].

        [assets folder]: https://gohugo.io/getting-started/directory-structure/#directory-structure-explained
        [learning guide]: https://sass-lang.com/guide
        [mixin]: https://sass-lang.com/documentation/at-rules/mixin
        [sref:`Enabled`]: Platen.Site.Theme.Styles.Defined.Enabled
    type: object
  Spin:
    title: Spin Utilities
    description: Defines the spin mixin
    schematize:
      weight: 4
      skipSchemaRender: true
      details: |
        Defines the `spin` [mixin]. By default, the only setting for this property is
        [sref:`Enabled`], which defaults to `true`. If you set [sref:`Enabled`] to `false`, this
        style isn't applied to the site.

        With [sref:`Enabled`] set to `true`, Platen applies the following style to the site:

        ```scss
        @mixin spin($duration) {
          animation: spin $duration ease infinite;
          @keyframes spin {
            100% {
              transform: rotate(360deg);
            }
          }
        }
        ```

        This utility can be included by other styles, removing the need to define the behavior for
        [sref:spinning animations] on an individual basis. It takes a duration input, which must be
        a valid [sref:`time` duration value]. This is used to determine how long it takes for one
        spin to complete.

        You can overwrite this definition for your own site or theme by creating the file
        `styles/utils/_spin.scss` in your [assets folder], which defaults to `assets` in
        your project root.

        ```details { .danger summary="Careful!" }
        Note that if you create this file, it _entirely overwrites_ the default from the theme.
        ```

        For more information on authoring SCSS, see the [learning guide].

        [assets folder]: https://gohugo.io/getting-started/directory-structure/#directory-structure-explained
        [learning guide]: https://sass-lang.com/guide
        [mixin]: https://sass-lang.com/documentation/at-rules/mixin
        [sref:`Enabled`]: Platen.Site.Theme.Styles.Defined.Enabled
        [sref:`time` duration value]]: mdn.css:time
        [sref:spinning animations]: mdn.css:animatio
    type: object
  Fixed:
    title: Fixed Utilities
    description: Defines the fixed mixin.
    schematize:
      weight: 5
      skipSchemaRender: true
      details: |
        Defines the `fixed` mixin. By default, the only setting for this property is [sref:`Enabled`],
        which defaults to `true`. If you set [sref:`Enabled`] to `false`, this style isn't applied to the
        site.

        With [sref:`Enabled`] set to `true`, Platen applies the following style to the site:

        ```scss
        @mixin fixed {
          position: fixed;
          top: 0;
          bottom: 0;
          overflow-x: hidden;
          overflow-y: auto;
        }
        ```

        This utility can be included by other styles, removing the need to define behavior for
        fixed-position items on an individual basis.

        It sets the position to [sref:`fixed`] in the center of the screen, hides the horizontal
        overflow, and uses the automatic setting for vertical overflow.

        You can overwrite this definition for your own site or theme by creating the file
        `styles/utils/_fixed.scss` in your [assets folder], which defaults to `assets` in
        your project root.

        ```details { .danger summary="Careful!" }
        Note that if you create this file, it _entirely overwrites_ the default from the theme.
        ```

        For more information on authoring SCSS, see the [learning guide].

        [assets folder]: https://gohugo.io/getting-started/directory-structure/#directory-structure-explained
        [learning guide]: https://sass-lang.com/guide
        [sref:`Enabled`]: Platen.Site.Theme.Styles.Defined.Enabled
        [sref:`fixed`]: mdn.css:position#fixed
    type: object
  Outline:
    title: Outline Utilities
    description: Defines the outline mixin.
    schematize:
      weight: 6
      skipSchemaRender: true
      details: |
        Defines the `outline` [mixin]. By default, the only setting for this property is
        [sref:`Enabled`], which defaults to `true`. If you set [sref:`Enabled`] to `false`, this
        style isn't applied to the site.

        With [sref:`Enabled`] set to `true`, Platen applies the following style to the site:

        ```scss
        @mixin outline {
          outline-style: auto;
          outline-color: currentColor;
          outline-color: -webkit-focus-ring-color;
        }
        ```

        This utility can be included by other styles, removing the need to define
        [sref:`outline-style`] and [sref:`outline-color`] on an individual basis.

        You can overwrite this definition for your own site or theme by creating the file
        `styles/utils/_outline.scss` in your [assets folder], which defaults to `assets` in
        your project root.

        ```details { .danger summary="Careful!" }
        Note that if you create this file, it _entirely overwrites_ the default from the theme.
        ```

        For more information on authoring SCSS, see the [learning guide].

        [assets folder]: https://gohugo.io/getting-started/directory-structure/#directory-structure-explained
        [learning guide]: https://sass-lang.com/guide
        [mixin]: https://sass-lang.com/documentation/at-rules/mixin
        [sref:`Enabled`]: Platen.Site.Theme.Styles.Defined.Enabled
        [sref:`outline-color`]: mdn.css:outline-color
        [sref:`outline-style`]: mdn.css:outline-style
    type: object
