# yaml-language-server: $schema=https://json-schema.org/draft/2020-12/schema
$schema: https://json-schema.org/draft/2020-12/schema
$id: /schemas/Platen/Site/Theme/Styles/Markdown.schema.yaml
title: Markdown Style Modules
description: Defines the map of Markdown-specific SCSS style modules for the theme.
schematize:
  details: |
    Defines the map of Markdown-specific SCSS style modules for the theme. The existing value is a map
    of styles that are loaded first for the theme and set defaults for the presentation.

    You can add new keys or replace the values for existing ones. You don't need to keep the
    full list of all styles in your own configuration file. Only specify the values you want
    to add or replace.
type: object
properties:
  Page:
    title: Page Style Module
    description: Defines the style for the page container for Markdown content.
    schematize:
      weight: 1
      skipSchemaRender: true
      details: |
        Defines the style for the page container for Markdown content. By default, the only setting
        for this property is [sref:`Enabled`], which defaults to `true`. If you set
        [sref:`Enabled`] to `false`, this style isn't applied to the site.

        With [sref:`Enabled`] set to `true`, Platen applies the following style to the site:

        ```scss
        .markdown {
          line-height: 1.6;

          // remove padding at the beginning of page
          > :first-child {
            margin-top: 0;
          }
        }
        ```

        This applies to all of the Markdown content on a page. It sets the line height to `1.6` to
        ensure the site is readable and removes the top margin from the first element in the page.

        You can overwrite this definition for your own site or theme by creating the file
        `styles/markdown/_page.scss` in your [assets folder], which defaults to `assets` in
        your project root.

        ```details { .danger summary="Careful!" }
        Note that if you create this file, it _entirely overwrites_ the default from the theme.
        ```

        For more information on authoring SCSS, see the [learning guide].

        [assets folder]: https://gohugo.io/getting-started/directory-structure/#directory-structure-explained
        [learning guide]: https://sass-lang.com/guide
        [sref:`Enabled`]: Platen.Site.Theme.Styles.Defined.Enabled
    type: object
  Headings:
    title: Headings Style Module
    description: Defines styles for headings in Markdown content.
    schematize:
      weight: 2
      skipSchemaRender: true
      details: |
        Defines styles for headings in Markdown content. By default, the only setting for this
        property is [sref:`Enabled`], which defaults to `true`. If you set [sref:`Enabled`] to
        `false`, this style isn't applied to the site.

        With [sref:`Enabled`] set to `true`, Platen applies the following style to the site:

        ```scss
        .markdown {
          h1,
          h2,
          h3,
          h4,
          h5,
          h6 {
            font-weight: normal;
            line-height: 1;
            margin-top: 1.5em;
            margin-bottom: $padding-large;

            a.anchor {
              opacity: 0;
              font-size: 0.75em;
              vertical-align: middle;
              text-decoration: none;
            }

            &:hover a.anchor,
            a.anchor:focus {
              opacity: initial;
            }
          }

          h4,
          h5,
          h6 {
            font-weight: bolder;
          }

          h5 {
            font-size: 0.875em;
          }

          h6 {
            font-size: 0.75em;
          }
        }
        ```

        ### Headings Defaults

        ```scss
        font-weight: normal;
        line-height: 1;
        margin-top: 1.5em;
        margin-bottom: $padding-large;

        a.anchor {
          opacity: 0;
          font-size: 0.75em;
          vertical-align: middle;
          text-decoration: none;
        }

        &:hover a.anchor,
        a.anchor:focus {
          opacity: initial;
        }
        ```

        ### Smaller Headings

        ```scss
        h4,
        h5,
        h6 {
          font-weight: bolder;
        }

        h5 {
          font-size: 0.875em;
        }

        h6 {
          font-size: 0.75em;
        }
        ```

        ### Overwriting

        You can overwrite this definition for your own site or theme by creating the file
        `styles/markdown/_headings.scss` in your [assets folder], which defaults to `assets` in
        your project root.

        ```details { .danger summary="Careful!" }
        Note that if you create this file, it _entirely overwrites_ the default from the theme.
        ```

        For more information on authoring SCSS, see the [learning guide].

        [assets folder]: https://gohugo.io/getting-started/directory-structure/#directory-structure-explained
        [learning guide]: https://sass-lang.com/guide
        [sref:`Enabled`]: Platen.Site.Theme.Styles.Defined.Enabled
    type: object
  Links:
    title: Links Style Module
    description: Defines the styles for links in Markdown content.
    schematize:
      weight: 3
      skipSchemaRender: true
      details: |
        Defines the styles for links in Markdown content. By default, the only setting for this
        property is [sref:`Enabled`], which defaults to `true`. If you set [sref:`Enabled`] to
        `false`, this style isn't applied to the site.

        With [sref:`Enabled`] set to `true`, Platen applies the following style to the site:

        ```scss
        .markdown {
          a {
            text-decoration: none;

            &:hover {
              text-decoration: underline;
            }
            &:visited {
              color: var(--color-visited-link);
            }
          }
        }
        ```

        This applies to any links in Markdown content. It removes the default text decoration for
        links, adds an underline when a site visitor hovers on a link, and sets the color for
        visited links based on the theme mode.

        You can overwrite this definition for your own site or theme by creating the file
        `styles/markdown/_links.scss` in your [assets folder], which defaults to `assets` in
        your project root.

        ```details { .danger summary="Careful!" }
        Note that if you create this file, it _entirely overwrites_ the default from the theme.
        ```

        For more information on authoring SCSS, see the [learning guide].

        [assets folder]: https://gohugo.io/getting-started/directory-structure/#directory-structure-explained
        [learning guide]: https://sass-lang.com/guide
        [sref:`Enabled`]: Platen.Site.Theme.Styles.Defined.Enabled
    type: object
  Bold:
    title: Bold Style Module
    description: Defines the bolding behavior styles for Markdown content.
    schematize:
      weight: 4
      skipSchemaRender: true
      details: |
        Defines the bolding behavior styles for Markdown content. By default, the only setting for
        this property is [sref:`Enabled`], which defaults to `true`. If you set [sref:`Enabled`] to
        `false`, this style isn't applied to the site.

        With [sref:`Enabled`] set to `true`, Platen applies the following style to the site:

        ```scss
        .markdown {
          b,
          optgroup,
          strong {
            font-weight: bolder;
          }
        }
        ```

        This applies to strongly emphasized content as well as content in a `b` tag or `optgroup`,
        setting the font weight for those elements to one step bolder than the text around them.

        You can overwrite this definition for your own site or theme by creating the file
        `styles/markdown/_bold.scss` in your [assets folder], which defaults to `assets` in
        your project root.

        ```details { .danger summary="Careful!" }
        Note that if you create this file, it _entirely overwrites_ the default from the theme.
        ```

        For more information on authoring SCSS, see the [learning guide].

        [assets folder]: https://gohugo.io/getting-started/directory-structure/#directory-structure-explained
        [learning guide]: https://sass-lang.com/guide
        [sref:`Enabled`]: Platen.Site.Theme.Styles.Defined.Enabled
    type: object
  Paragraphs:
    title: Paragraphs Style Module
    description: Defines the style for paragraphs in Markdown content.
    schematize:
      weight: 5
      skipSchemaRender: true
      details: |
        Defines the style for paragraphs in Markdown content. By default, the only setting for this
        property is [sref:`Enabled`], which defaults to `true`. If you set [sref:`Enabled`] to
        `false`, this style isn't applied to the site.

        With [sref:`Enabled`] set to `true`, Platen applies the following style to the site:

        ```scss
        .markdown {
          p {
            word-wrap:break-word;
          }
        }
        ```

        This applies to `p` elements in the Markdown content, ensuring they wrap on word breaks and
        not in the middle of a word.

        You can overwrite this definition for your own site or theme by creating the file
        `styles/markdown/_paragraphs.scss` in your [assets folder], which defaults to `assets`
        in your project root.

        ```details { .danger summary="Careful!" }
        Note that if you create this file, it _entirely overwrites_ the default from the theme.
        ```

        For more information on authoring SCSS, see the [learning guide].

        [assets folder]: https://gohugo.io/getting-started/directory-structure/#directory-structure-explained
        [learning guide]: https://sass-lang.com/guide
        [sref:`Enabled`]: Platen.Site.Theme.Styles.Defined.Enabled
    type: object
  Images:
    title: Images Style Module
    description: Defines the style for images in Markdown content.
    schematize:
      weight: 6
      skipSchemaRender: true
      details: |
        Defines the style for images in Markdown content. By default, the only setting for this
        property is [sref:`Enabled`], which defaults to `true`. If you set [sref:`Enabled`] to
        `false`, this style isn't applied to the site.

        With [sref:`Enabled`] set to `true`, Platen applies the following style to the site:

        ```scss
        .markdown {
          img {
            max-width: 100%;
            height: auto;
          }
        }
        ```

        This applies to `img` elements in Markdown content. It sets the maximum width to the width
        of the container and the height to automatically scale to the width.

        You can overwrite this definition for your own site or theme by creating the file
        `styles/markdown/_images.scss` in your [assets folder], which defaults to `assets` in
        your project root.

        ```details { .danger summary="Careful!" }
        Note that if you create this file, it _entirely overwrites_ the default from the theme.
        ```

        For more information on authoring SCSS, see the [learning guide].

        [assets folder]: https://gohugo.io/getting-started/directory-structure/#directory-structure-explained
        [learning guide]: https://sass-lang.com/guide
        [sref:`Enabled`]: Platen.Site.Theme.Styles.Defined.Enabled
    type: object
  Code:
    title: Code Style Module
    description: Defines styles for inline and blocks of code in Markdown content.
    schematize:
      weight: 7
      skipSchemaRender: true
      details: |
        Defines styles for inline and blocks of code in Markdown content. By default, the only
        setting for this property is [sref:`Enabled`], which defaults to `true`. If you set
        [sref:`Enabled`] to `false`, this style isn't applied to the site.

        With [sref:`Enabled`] set to `true`, Platen applies the following style to the site:

        ```scss
        .markdown {
          code {
            padding: 0 $padding-small;
            background: var(--gray-200);
            border-radius: $border-radius;
            font-size: 0.875em;
          }

          pre {
            padding: $padding-large;
            background: var(--gray-100);
            border-radius: $border-radius;
            overflow-x: auto;

            code {
              padding: 0;
              background: none;
            }
          }

          // Special case for highlighted code with line numbers
          .highlight table tr {
            td:nth-child(1) pre {
              margin: 0;
              padding-inline-end: 0;
            }
            td:nth-child(2) pre {
              margin: 0;
              padding-inline-start: 0;
            }
          }
        }
        ```

        ### Code Defaults

        ```scss
        code {
          padding: 0 $padding-small;
          background: var(--gray-200);
          border-radius: $border-radius;
          font-size: 0.875em;
        }
        ```

        ### Code Blocks

        ```scss
        pre {
          padding: $padding-large;
          background: var(--gray-100);
          border-radius: $border-radius;
          overflow-x: auto;

          code {
            padding: 0;
            background: none;
          }
        }
        ```

        ### Code Blocks with Line Numbers

        ```scss
        .highlight table tr {
          td:nth-child(1) pre {
            margin: 0;
            padding-inline-end: 0;
          }
          td:nth-child(2) pre {
            margin: 0;
            padding-inline-start: 0;
          }
        }
        ```

        ### Overwriting

        You can overwrite this definition for your own site or theme by creating the file
        `styles/markdown/_code.scss` in your [assets folder], which defaults to `assets` in
        your project root.

        ```details { .danger summary="Careful!" }
        Note that if you create this file, it _entirely overwrites_ the default from the theme.
        ```

        For more information on authoring SCSS, see the [learning guide].

        [assets folder]: https://gohugo.io/getting-started/directory-structure/#directory-structure-explained
        [learning guide]: https://sass-lang.com/guide
        [sref:`Enabled`]: Platen.Site.Theme.Styles.Defined.Enabled
    type: object
  Blockquotes:
    title: Blockquotes Style Module
    description: Defines the style for blockquotes in Markdown.
    schematize:
      weight: 8
      skipSchemaRender: true
      details: |
        Defines the style for blockquotes in Markdown. By default, the only setting for this
        property is [sref:`Enabled`], which defaults to `true`. If you set [sref:`Enabled`] to
        `false`, this style isn't applied to the site.

        With [sref:`Enabled`] set to `true`, Platen applies the following style to the site:

        ```scss
        .markdown {
          blockquote {
            margin: $padding-large 0;
            padding: $padding-medium $padding-large $padding-medium ($padding-large - $padding-small); //to keep total left space 16dp

            border-inline-start: $padding-small solid var(--gray-200);
            border-radius: $border-radius;

            :first-child {
              margin-top: 0;
            }
            :last-child {
              margin-bottom: 0;
            }
          }
        }
        ```

        This applies to `blockquote` elements and their children in Markdown content.

        You can overwrite this definition for your own site or theme by creating the file
        `styles/markdown/_blockquotes.scss` in your [assets folder], which defaults to `assets`
        in your project root.

        ```details { .danger summary="Careful!" }
        Note that if you create this file, it _entirely overwrites_ the default from the theme.
        ```

        For more information on authoring SCSS, see the [learning guide].

        [assets folder]: https://gohugo.io/getting-started/directory-structure/#directory-structure-explained
        [learning guide]: https://sass-lang.com/guide
        [sref:`Enabled`]: Platen.Site.Theme.Styles.Defined.Enabled
    type: object
  Tables:
    title: Tables Style Module
    description: Defines the style for tables in Markdown content.
    schematize:
      weight: 9
      skipSchemaRender: true
      details: |
        Defines the style for tables in Markdown content. By default, the only setting for this
        property is [sref:`Enabled`], which defaults to `true`. If you set [sref:`Enabled`] to
        `false`, this style isn't applied to the site.

        With [sref:`Enabled`] set to `true`, Platen applies the following style to the site:

        ```scss
        .markdown {
          table {
            overflow: auto;
            display: block;
            border-spacing: 0;
            border-collapse: collapse;
            margin-top: $padding-large;
            margin-bottom: $padding-large;

            tr th,
            tr td {
              padding: $padding-medium $padding-large;
              border: $padding-minimal solid var(--gray-200);
            }

            tr:nth-child(2n) {
              background: var(--gray-100);
            }
          }
        }
        ```

        This applies to `table` elements and their children in Markdown content.

        ### Table Container

        ```scss
        overflow: auto;
        display: block;
        border-spacing: 0;
        border-collapse: collapse;
        margin-top: $padding-large;
        margin-bottom: $padding-large;
        ```

        ### Cells

        ```scss
        tr th,
        tr td {
          padding: $padding-medium $padding-large;
          border: $padding-minimal solid var(--gray-200);
        }
        ```

        ### Rows

        ```scss
        tr:nth-child(2n) {
          background: var(--gray-100);
        }
        ```

        ### Overwriting

        You can overwrite this definition for your own site or theme by creating the file
        `styles/markdown/_tables.scss` in your [assets folder], which defaults to `assets` in
        your project root.

        ```details { .danger summary="Careful!" }
        Note that if you create this file, it _entirely overwrites_ the default from the theme.
        ```

        For more information on authoring SCSS, see the [learning guide].

        [assets folder]: https://gohugo.io/getting-started/directory-structure/#directory-structure-explained
        [learning guide]: https://sass-lang.com/guide
        [sref:`Enabled`]: Platen.Site.Theme.Styles.Defined.Enabled
    type: object
  Lists:
    title: Lists Style Module
    description: Defines styles for definition, ordered, and unordered lists in Markdown content.
    schematize:
      weight: 10
      skipSchemaRender: true
      details: |
        Defines styles for definition, ordered, and unordered lists in Markdown content. By default,
        the only setting for this property is [sref:`Enabled`], which defaults to `true`. If you set
        [sref:`Enabled`] to `false`, this style isn't applied to the site.

        With [sref:`Enabled`] set to `true`, Platen applies the following style to the site:

        ```scss
        .markdown {
          ul,
          ol {
            padding-inline-start: $padding-large * 2;
          }

          dl {
            dt {
              font-weight: bolder;
              margin-top: $padding-large;
            }

            dd {
              margin-inline-start: 0;
              margin-bottom: $padding-large;
            }
          }
        }
        ```

        This applies to ordered and unordered lists in markdown as well as definition lists.

        ### Ordered and Unordered Lists

        ```scss
        ul,
        ol {
          padding-inline-start: $padding-large * 2;
        }
        ```

        ### Definition Lists

        ```scss
        dl {
          dt {
            font-weight: bolder;
            margin-top: $padding-large;
          }

          dd {
            margin-inline-start: 0;
            margin-bottom: $padding-large;
          }
        }
        ```

        ### Overwriting

        You can overwrite this definition for your own site or theme by creating the file
        `styles/markdown/_lists.scss` in your [assets folder], which defaults to `assets` in
        your project root.

        ```details { .danger summary="Careful!" }
        Note that if you create this file, it _entirely overwrites_ the default from the theme.
        ```

        For more information on authoring SCSS, see the [learning guide].

        [assets folder]: https://gohugo.io/getting-started/directory-structure/#directory-structure-explained
        [learning guide]: https://sass-lang.com/guide
        [sref:`Enabled`]: Platen.Site.Theme.Styles.Defined.Enabled
    type: object
  Rulers:
    title: Rulers Style Module
    description: Defines the style for rulers in Markdown content.
    schematize:
      weight: 11
      skipSchemaRender: true
      details: |
        Defines the style for rulers in Markdown content. By default, the only setting for this
        property is [sref:`Enabled`], which defaults to `true`. If you set [sref:`Enabled`] to
        `false`, this style isn't applied to the site.

        With [sref:`Enabled`] set to `true`, Platen applies the following style to the site:

        ```scss
        .markdown {
          hr {
            height: $padding-minimal;
            border: none;
            background: var(--gray-200);
          }
        }
        ```

        This applies to `hr` elements in Markdown content, as added with `---`.

        You can overwrite this definition for your own site or theme by creating the file
        `styles/markdown/_rulers.scss` in your [assets folder], which defaults to `assets` in
        your project root.

        ```details { .danger summary="Careful!" }
        Note that if you create this file, it _entirely overwrites_ the default from the theme.
        ```

        For more information on authoring SCSS, see the [learning guide].

        [assets folder]: https://gohugo.io/getting-started/directory-structure/#directory-structure-explained
        [learning guide]: https://sass-lang.com/guide
        [sref:`Enabled`]: Platen.Site.Theme.Styles.Defined.Enabled
    type: object
  Details:
    title: Details Style Module
    description: Defines the style for details in Markdown content.
    schematize:
      weight: 12
      skipSchemaRender: true
      details: |
        Defines the style for details in Markdown content. By default, the only setting for this
        property is [sref:`Enabled`], which defaults to `true`. If you set [sref:`Enabled`] to
        `false`, this style isn't applied to the site.

        With [sref:`Enabled`] set to `true`, Platen applies the following style to the site:

        ```scss
        .markdown {
          details {
            padding: $padding-large;
            border: $padding-minimal solid var(--gray-200);
            border-radius: $border-radius;

            summary {
              line-height: 1;
              padding: $padding-large;
              margin: -$padding-large;
              cursor: pointer;
            }

            &[open] summary {
              margin-bottom: 0;
            }
          }
        }
        ```

        This applies to the `details` element and its children in Markdown content, as added with
        the `details` shortcode.

        You can overwrite this definition for your own site or theme by creating the file
        `styles/markdown/_details.scss` in your [assets folder], which defaults to `assets` in
        your project root.

        ```details { .danger summary="Careful!" }
        Note that if you create this file, it _entirely overwrites_ the default from the theme.
        ```

        For more information on authoring SCSS, see the [learning guide].

        [assets folder]: https://gohugo.io/getting-started/directory-structure/#directory-structure-explained
        [learning guide]: https://sass-lang.com/guide
        [sref:`Enabled`]: Platen.Site.Theme.Styles.Defined.Enabled
    type: object
  Figure:
    title: Figure Style Module
    description: Defines the style for figures in Markdown.
    schematize:
      weight: 13
      skipSchemaRender: true
      details: |
        Defines the style for figures in Markdown. By default, the only setting for this property is
        [sref:`Enabled`], which defaults to `true`. If you set [sref:`Enabled`] to `false`, this
        style isn't applied to the site.

        With [sref:`Enabled`] set to `true`, Platen applies the following style to the site:

        ```scss
        .markdown {
          figure {
            margin: $padding-large 0;
            figcaption p {
              margin-top: 0;
            }
          }
        }
        ```

        This applies to `figure` elements in page content, as added by the built-in `figure`
        shortcode or the `art` shortcode.

        It adds vertical padding to the figure, using the value defined in
        [sref:`Theme.Variables.BasicSCSS.padding-large`] and sets the horizontal padding to `0`.

        It also removes the top margin from paragraphs in the figure's caption.

        You can overwrite this definition for your own site or theme by creating the file
        `styles/markdown/_figure.scss` in your [assets folder], which defaults to `assets` in
        your project root.

        ```details { .danger summary="Careful!" }
        Note that if you create this file, it _entirely overwrites_ the default from the theme.
        ```

        For more information on authoring SCSS, see the [learning guide].

        [assets folder]: https://gohugo.io/getting-started/directory-structure/#directory-structure-explained
        [learning guide]: https://sass-lang.com/guide
        [sref:`Enabled`]: Platen.Site.Theme.Styles.Defined.Enabled
        [sref:`Theme.Variables.BasicSCSS.padding-large`]: Platen.Site.Theme.Variables.BasicSCSS.padding-large
    type: object
  Inner:
    title: Inner Style Module
    description: Defines the style for nested Markdown content.
    schematize:
      weight: 14
      skipSchemaRender: true
      details: |
        Defines the style for nested Markdown content. By default, the only setting for this
        property is [sref:`Enabled`], which defaults to `true`. If you set [sref:`Enabled`] to
        `false`, this style isn't applied to the site.

        With [sref:`Enabled`] set to `true`, Platen applies the following style to the site:

        ```scss
        .markdown-inner {
          // Util class to remove extra margin in nested markdown content
          > :first-child {
            margin-top: 0;
          }
          > :last-child {
            margin-bottom: 0;
          }
        }
        ```

        This applies to markdown nested in normal markdown content through shortcodes, such as:

        - Content in the `columns` shortcode
        - Content in the `tabs` shortcode
        - The body content in the `details` shortcode
        - The definition item in the `section` shortcode that holds the summary for a page

        It removes the top margin from the first element and the bottom margin from the last element
        to let that content fit better inside the containers.

        You can overwrite this definition for your own site or theme by creating the file
        `styles/markdown/_inner.scss` in your [assets folder], which defaults to `assets` in
        your project root.

        ```details { .danger summary="Careful!" }
        Note that if you create this file, it _entirely overwrites_ the default from the theme.
        ```

        For more information on authoring SCSS, see the [learning guide].

        [assets folder]: https://gohugo.io/getting-started/directory-structure/#directory-structure-explained
        [learning guide]: https://sass-lang.com/guide
        [sref:`Enabled`]: Platen.Site.Theme.Styles.Defined.Enabled
    type: object
  Art:
    title: Art Style Module
    description: Defines the style for art image links.
    schematize:
      weight: 14
      skipSchemaRender: true
      details: |
        Defines default styling for figures created by the art render hook for images.

        When you add [an image with the [`art:` prefix][01], the following SCSS is applied:

        ```scss
        figure.platen-art {
          width: 100%
          img {
            object-fit: contain;
            width: 100%;
          }
          figcaption {
            margin-top: 1rem;
            text-align: center;
            font-size: smaller;
          }

          &.half {
            width: 50%;
          }
          &.third {
            width: 33%
          }
          &.quarter {
            width: 25%
          }

          &.platen-content-warning {
            img {
              z-index: 10;
              filter: blur(30px);
            }
            figcaption {
              visibility: hidden;
            }
            input.platen-content-warning {
              visibility: hidden;
            }
            input.platen-content-warning + label {
              position: absolute;
              z-index: 1;
              bottom: 0;
              top: 0;
              left: 0;
              right: 0;
              margin: 1px ;
              text-align: center;
              &::before {
                content: "Content Warning:";
                display: block;
                font-weight: bolder;
                font-size: larger;
                margin-bottom: 1em;
                margin-top: 1em;
              }
            }
            input[type="checkbox"]:checked + label {
              opacity: 0;
            }
            input[type="checkbox"]:checked + label + img {
              filter: blur(0);
            }
            input[type="checkbox"]:checked + label + img + figcaption {
              visibility: visible;
            }
          }
        }
        ```

        The shortcode creates a `<figure>` element with an `<img>` element containing the artwork.
        If the shortcode specifies a caption, it's added in a `figcaption` element beneath the
        image. By default, the `<figure>` element has the `platen-art` class.

        ### Defaults

        ```scss
        width: 100%
        img {
          object-fit: contain;
          width: 100%;
        }
        figcaption {
          margin-top: 1rem;
          text-align: center;
          font-size: smaller;
        }
        ```

        By default, the figure's width is set to take up the entirety of its available space.
        Similarly, the image is always set to take up the full width of the figure itself and uses
        the [sref:`object-fit`] property to keep the object's aspect ratio while fitting into the
        available space.

        If the figure includes a caption, the caption is added with a top margin of
        [sref:`$padding-large`] with the text centered beneath the image and the font size decreased
        on step.

        ### Sizing Classes

        ```scss
        &.half {
          width: 50%;
        }
        &.third {
          width: 33%
        }
        &.quarter {
          width: 25%
        }
        ```

        When an author adds the `half`, `third`, or `quarter` class to the figure with the
        shortcode's `class` parameter, the figure's width is set to the appropriate percent. Used
        in combination with the `float-left` or `float-right` [sref:basic utility classes], authors
        can include their artwork beside the rest of their content without having to use the
        [`columns`][02] codeblock for the same effect.

        ### Content Warning

        ```scss
        img {
          z-index: 10;
          filter: blur(30px);
        }
        figcaption {
          visibility: hidden;
        }
        input.platen-content-warning {
          visibility: hidden;
        }
        input.platen-content-warning + label {
          position: absolute;
          z-index: 1;
          bottom: 0;
          top: 0;
          left: 0;
          right: 0;
          margin: 1px ;
          text-align: center;
          &::before {
            content: "Content Warning:";
            display: block;
            font-weight: bolder;
            font-size: larger;
            margin-bottom: 1em;
            margin-top: 1em;
          }
        }
        input[type="checkbox"]:checked + label {
          opacity: 0;
        }
        input[type="checkbox"]:checked + label + img {
          filter: blur(0);
        }
        input[type="checkbox"]:checked + label + img + figcaption {
          visibility: visible;
        }
        ```

        When the shortcode is used with the [`contentWarning` parameter][03], it adds the
        `platen-content-warning` class to the figure and inserts a checkbox input and label before
        the image element.

        The styling blurs the image and super-imposes the content warning label over it, stretching
        the label to fill the entire figure. This allows a site visitor to click anywhere in the
        figure to unblur the image and hide the content warning instead, clicking again to reverse
        the process.

        ### Overriding

        You can overwrite this definition for your own site or theme by creating the file
        `styles/markdown/_art.scss` in your [assets folder][03], which defaults to `assets` in
        your project root.

        ```details { .danger summary="Careful!" }
        Note that if you create this file, it _entirely overwrites_ the default from the theme.
        ```

        For more information on authoring SCSS, see the [learning guide][04].

        <!-- Reference Links -->
        [01]: /modules/platen/renderers/art
        [02]: /modules/platen/renderers/columns
        [03]: https://gohugo.io/getting-started/directory-structure/#directory-structure-explained
        [04]: https://sass-lang.com/guide
        [sref:`object-fit`]: mdn.css:object-fit
        [sref:`$padding-large`]: Platen.Site.Theme.Variables.BasicSCSS.padding-large
    type: object
  Columns:
    title: Columns Style Module
    description: Defines the style for column-rendering codeblocks.
    schematize:
      details: |
        Defines default styling for columns created by the codeblock.

        When you use the [`columns`][01] codeblock, the following SCSS is applied:

        ```scss
        .markdown .platen-columns {
          margin-left: -$padding-large;
          margin-right: -$padding-large;
          flex-direction: column;

          @media (min-width:56rem) {
            flex-direction: row;
          }

          >div {
            margin: $padding-large 0;
            min-width: $body-min-width / 2;
            padding: 0 $padding-large;
          }

          &.no-flatten-in-mobile {
            @media (min-width:56rem) {
              flex-direction: column;
            }
          }
        }
        ```

        The content is placed in a div with the `platen-columns`, `flex`, and classes. Each column's
        content is then placed in another div with the `flex-even` and `markdown-inner` classes.

        By default, this style:
        
        - Sets the outer container's horizontal margins to the negative value of
          [sref:`$padding-large`]
        - Sets the [sref:`flex-direction`] to column, ensuring the child divs are rendered as
          columns instead of rows. On smaller screens, like phones, it sets the `flex-direction` to
          row for readability.
        - Sets each column to have a vertical margin and horizontal padding to
          [sref:`$padding-large`], and sets the minimum width to half the value of
          [sref:`$body-min-width`].

        If the `no-flatten-in-mobile` class is added to the columns codeblock, it keeps the
        `flex-direction` as `column` even on smaller screens.

        You can overwrite this definition for your own site or theme by creating the file
        `styles/markdown/_columns.scss` in your [assets folder][02], which defaults to `assets` in
        your project root.

        ```details { .danger summary="Careful!" }
        Note that if you create this file, it _entirely overwrites_ the default from the theme.
        ```

        For more information on authoring SCSS, see the [learning guide][03].

        <!-- Reference Links -->
        [01]: /modules/platen/renderers/columns
        [02]: https://gohugo.io/getting-started/directory-structure/#directory-structure-explained
        [03]: https://sass-lang.com/guide
        [sref:`flex-direction`]: mdn.css:flex-direction
        [sref:`$padding-large`]: Platen.Site.Theme.Variables.BasicSCSS.padding-large
        [sref:`$body-min-width`]: Platen.Site.Theme.Variables.BasicSCSS.body-min-width
    type: object
  Tabs:
    title: Tabs Style Module
    description: Defines the style for tab-rendering codeblocks.
    schematize:
      details: |
        Defines default styling for tabs created by the codeblock.

        When you use the [`tabs`][01] codeblock, the following SCSS is applied:

        ```scss
        .markdown .platen-tabs {
          margin-top: $padding-large;
          margin-bottom: $padding-large;

          border: $padding-minimal solid var(--gray-200);
          border-radius: $border-radius;

          overflow: hidden;

          display: flex;
          flex-wrap: wrap;

          label {
            display: inline-block;
            padding: $padding-medium $padding-large;
            border-bottom: $padding-minimal transparent;
            cursor: pointer;
          }

          .platen-tabs-content {
            order: 999; //Move content blocks to the end
            width: 100%;
            border-top: $padding-minimal solid var(--gray-100);
            padding: $padding-large;
            display: none;
          }

          input[type="radio"]:checked + label {
            border-bottom: $padding-minimal solid var(--color-link);
          }
          input[type="radio"]:checked + label + .platen-tabs-content {
            display: block;
          }
          input[type="radio"]:focus + label {
            @include outline;
          }
        }
        ```

        When you use the tabs codeblock, the content is placed in a `div` container with the
        `platen-tabs` class. Each tab uses a [radio input] with its [label] used as the selectable
        tab. Each tab's content is placed in a div with the `platen-tabs-content` and
        `markdown-inner` classes.

        ### Tab Container

        ```scss
        margin-top: $padding-large;
        margin-bottom: $padding-large;

        border: $padding-minimal solid var(--gray-200);
        border-radius: $border-radius;

        overflow: hidden;

        display: flex;
        flex-wrap: wrap;
        ```

        The container is uses [sref:`Theme.Variables.BasicSCSS.padding-large`] to set the vertical
        margins. It adds a solid border with the width set to
        [sref:`Theme.Variables.BasicSCSS.padding-minimal`], the border radius to
        [sref:`Theme.Variables.LightCSS.color-link`], and the color to
        [sref:`Theme.Variables.LightCSS.gray-200`] or [sref:`Theme.Variables.LightCSS.gray-200`]
        depending on the value of the [sref:`Theme.Config.Mode`] setting.

        Is sets the [sref:`overflow`] attribute to hidden, which keeps any content that doesn't fit
        the container from displaying.

        It uses [sref:flex box] to display the tabs and their labels and uses [sref:`flex-wrap`].

        ### Tab Labels

        ```scss
        label {
          display: inline-block;
          padding: $padding-medium $padding-large;
          border-bottom: $padding-minimal transparent;
          cursor: pointer;
        }
        input[type="radio"]:checked + label {
          border-bottom: $padding-minimal solid var(--color-link);
        }
        input[type="radio"]:focus + label {
          @include outline;
        }
        ```

        The labels are added as inline blocks, allowing them to display side-by-side. They're use
        the value of [sref:`Theme.Variables.BasicSCSS.padding-medium`] for the vertical padding
        and [sref:`Theme.Variables.BasicSCSS.padding-large`] for the horizontal padding.

        They get a transparent bottom border with the width set to [sref:`Theme.Variables.BasicSCSS.padding-minimal`]
        and have their cursor always display as a normal pointer.

        When the input for a label is checked, the label's border color switches from being
        transparent to the value of [sref:`Theme.Variables.LightCSS.color-link`] or [sref:`Theme.Variables.LightCSS.color-link`]
        depending on the [sref:`Theme.Config.Mode`].

        When the input for a label is focused, the label uses the [sref:`Theme.Styles.Utils.Outline`]
        mixin to add a full box outline to the label.

        ### Tab Content

        ```scss
        .platen-tabs-content {
          order: 999; //Move content blocks to the end
          width: 100%;
          border-top: $padding-minimal solid var(--gray-100);
          padding: $padding-large;
          display: none;
        }

        input[type="radio"]:checked + label + .platen-tabs-content {
          display: block;
        }
        ```

        The tabs are all set to have an [sref:`order`] of 999, putting them together at the end of the
        flex box. They're set to have a width of 100% of their container and given a solid top
        border with a width of [sref:`Theme.Variables.BasicSCSS.padding-minimal`] and their color set to
        either [sref:`Theme.Variables.LightCSS.gray-200`] or [sref:`Theme.Variables.DarkCSS.gray-200`]
        depending on the [sref:`Theme.Config.Mode`]. Their padding is set to [sref:`Theme.Variables.BasicSCSS.padding-large`].

        Finally, their display is set to `none` so they're hidden until selected. When a tab is
        selected, the display is changed `block`, making it visible.

        ### Overriding

        You can overwrite this definition for your own site or theme by creating the file
        `styles/shortcodes/_tabs.scss` in your [assets folder][02], which defaults to `assets` in
        your project root.

        ```details { .danger summary="Careful!" }
        Note that if you create this file, it _entirely overwrites_ the default from the theme.
        ```

        For more information on authoring SCSS, see the [learning guide][03].

        <!-- Reference Links -->
        [01]: /modules/platen/renderers/tabs
        [02]: https://gohugo.io/getting-started/directory-structure/#directory-structure-explained
        [03]: https://sass-lang.com/guide
        [sref:`flex-wrap`]: mdn.css:flex-wrap
        [sref:`order`]: mdn.css:order
        [sref:`overflow`]: mdn.css:overflow
        [sref:`Theme.Config.Mode`]: Platen.Site.Theme.Config.Mode
        [sref:`Theme.Styles.Utils.Outline`]: Platen.Site.Theme.Styles.Utils.Outline
        [sref:`Theme.Variables.BasicSCSS.border-radius`]: Platen.Site.Theme.Variables.BasicSCSS.border-radius
        [sref:`Theme.Variables.BasicSCSS.padding-large`]: Platen.Site.Theme.Variables.BasicSCSS.padding-large
        [sref:`Theme.Variables.BasicSCSS.padding-medium`]: Platen.Site.Theme.Variables.BasicSCSS.padding-large
        [sref:`Theme.Variables.BasicSCSS.padding-minimal`]: Platen.Site.Theme.Variables.BasicSCSS.padding-minimal
        [sref:`Theme.Variables.DarkCSS.gray-200`]: Platen.Site.Theme.Variables.DarkCSS.gray-200
        [sref:`Theme.Variables.DarkCSS.link-color`]: Platen.Site.Theme.Variables.DarkCSS.link-color
        [sref:`Theme.Variables.LightCSS.gray-200`]: Platen.Site.Theme.Variables.LightCSS.gray-200
        [sref:`Theme.Variables.LightCSS.link-color`]: Platen.Site.Theme.Variables.LightCSS.link-color
        [sref:flex box]: mdn.css:CSS_Flexible_Box_Layout
    type: object
patternProperties:
  ".":
    $ref: ./Defined.yaml
    schematize:
      href: pattern-any
