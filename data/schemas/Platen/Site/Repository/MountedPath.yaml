# yaml-language-server: $schema=https://json-schema.org/draft/2020-12/schema
$schema: https://json-schema.org/draft/2020-12/schema
$id: /schemas/Platen/Site/Repository/MountedPath.schema.yaml
title: Mounted Path
description: Maps a mounted content path from repository-relative to site-relative.
schematize:
  details: |
    Maps a mounted countent path from repository-relative to site-relative.

    Specify the repository-relative path to mounted content in the [sref:`Source`] property
    and the site-relative path in the [sref:`Target`] property.

    When building the URL for the "Edit this page" links, any content file that has a prefix
    matching a [sref:`Target`] value is munged to replace that path prefix with the one
    defined in [sref:`Source`].

    [sref:`Source`]: Platen.Site.Repository.MountedPath.Source
    [sref:`Target`]: Platen.Site.Repository.MountedPath.Target
type: object
required:
  - Source
  - Target
properties:
  Source:
    title: Repository-Relative Path
    description: Specifies the path to the file or folder relative to the repository root.
    schematize:
      weight: 1
      details: |
        Specifies the path to the file or folder relative to the content directory. Use this value
        to define the replacement prefix for this mounted content.

        There are three options for replacing the prefix:

        1. Set this value to the repository-relative path to the file or folder for this mounted
           content. Use this option when the mounted content is in the same repository as the site.
        1. Set this value to the base URL for this content's editing path in the repository it's
           hosted in. Use this option when the mounted content is in a different repository from the
           site.
        1. Set this value to `IGNORE!!` to skip rendering the "Edit this page" link at all. Use this
           option when you're including content but don't want to include editing information about
           it.
        
        #### Mapping Content From the Same Repository

        Given the following site configuration for a site whose repository is hosted at
        `https://github.com/myOrg/myProjects`:

        ```yaml
        module:
          imports:
            - path: github.com/myOrg/myProjects/SuperNeat
              mounts:
                - source: docs
                  target: content/reference/super-neat
        ```

        All of the content in `./SuperNeat/docs` (relative to the repository root) is added to the
        Hugo's virtual filesystem in `content/reference/super-neat`. When Platen processes the file
        defined at `./SuperNeat/docs/about.md`, Hugo notes that the file's path is 
        `reference/super-neat/about.md` instead, because of the virtual filesystem.

        Unless otherwise told, Platen would then build the "Edit this page" URL to be:

        ```
        https://github.com/myOrg/myProjects/edit/main/content/reference/super-neat/about.md
        ```

        instead of the correct:

        ```
        https://github.com/myOrg/myProjects/edit/main/SuperNeat/docs/about.md
        ```

        To ensure platen maps the mounted content correctly, you would specify this value as
        `SuperNeat/docs` and set [sref:`Target`] to `reference/super-neat`.

        #### Mapping Content From Another Repository

        Given the following site configuration for a site whose repository is hosted at
        `https://github.com/myOrg/website`:

        ```yaml
        module:
          imports:
            - path: github.com/myOrg/myProjects/SuperNeat
              mounts:
                - source: docs
                  target: content/reference/super-neat
        ```

        All of the content in the `./SuperNeat/docs` folder of the `myOrg/myProjects` GitHub
        repository is added to the Hugo's virtual filesystem in `content/reference/super-neat`. When
        Platen processes the file defined as the `about.md` file in that folder, Hugo notes that the
        file's path is `reference/super-neat/about.md` instead, because of the virtual filesystem.

        Unless otherwise told, Platen would then build the "Edit this page" URL to be:

        ```
        https://github.com/myOrg/website/edit/main/content/reference/super-neat/about.md
        ```

        instead of the correct:

        ```
        https://github.com/myOrg/myProjects/edit/main/SuperNeat/docs/about.md
        ```

        To ensure platen maps the mounted content correctly, you would specify this value as
        `https://github.com/myOrg/myProjects/edit/main/SuperNeat/docs` and set [sref:`Target`] to
        `reference/super-neat`.

        #### Ignoring Mounted Content

        Specifies the path to the file or folder relative to the content directory. Use this value
        to define the prefix to match for this mounted content.
        
        For example, given the following site configuration:

        ```yaml
        module:
          imports:
            - path: github.com/myOrg/myProjects/SuperNeat
              mounts:
                - source: docs
                  target: content/reference/super-neat
        ```

        All of the content in `./SuperNeat/docs` (relative to the repository root) is added to the
        Hugo's virtual filesystem in `content/reference/super-neat`. When Platen processes the file
        defined at `./SuperNeat/docs/about.md`, Hugo notes that the file's path is 
        `reference/super-neat/about.md` instead, because of the virtual filesystem.

        Unless otherwise told, Platen would then build the "Edit this page" URL to be:

        ```
        https://github.com/myOrg/myProjects/edit/main/content/reference/super-neat/about.md
        ```

        To ensure platen doesn't render an "Edit this page" link for this content, you would specify this value as
        `IGNORE!!` and set [sref:`Target`] to `reference/super-neat`.

        [sref:`Target`]: Platen.Site.Repository.MountedPath.Target
    type: string
  Target:
    title: Site-Relative Path
    description: Specifies the path to the file or folder relative to the content directory.
    type: string
    schematize:
      weight: 2
      details: |
        Specifies the path to the file or folder relative to the content directory. Use this value
        to define the prefix to match for this mounted content.
        
        For example, given the following site configuration:

        ```yaml
        module:
          imports:
            - path: github.com/myOrg/myProjects/SuperNeat
              mounts:
                - source: docs
                  target: content/reference/super-neat
        ```

        All of the content in `./SuperNeat/docs` (relative to the repository root) is added to the
        Hugo's virtual filesystem in `content/reference/super-neat`. When Platen processes the file
        defined at `./SuperNeat/docs/about.md`, Hugo notes that the file's path is 
        `reference/super-neat/about.md` instead, because of the virtual filesystem.

        Unless otherwise told, Platen would then build the "Edit this page" URL to be:

        ```
        https://github.com/myOrg/myProjects/edit/main/content/reference/super-neat/about.md
        ```

        instead of the correct:

        ```
        https://github.com/myOrg/myProjects/edit/main/SuperNeat/docs/about.md
        ```

        To ensure platen maps the mounted content correctly, you would specify this value as
        `reference/super-neat` and set [sref:`Source`] to `SuperNeat/docs`.

        [sref:`Source`]: Platen.Site.Repository.MountedPath.Source