# yaml-language-server: $schema=https://json-schema.org/draft/2020-12/schema
$schema: https://json-schema.org/draft/2020-12/schema
$id: settings.schema.yaml
title: Site Menu Settings
description: Optional settings controlling how a Platen site's menu is structured.
schematize:
  details: |
    The Platen display options control how the Platen site's menu is structured and displays.
    
    With the [sref:`root_section`] setting, you can define a content folder to add to the site menu as
    the main section.

    With the [sref:`before_injection`], [sref:`before_hugo_config`], [sref:`before_root_section`],
    [sref:`after_root_section`], [sref:`after_hugo_config`], and [sref:`after_injection`] settings
    (collectively, the menu position settings), you can use Platen [sref:features] to add entries to
    the site's menu in one of several locations using a partial defined for the feature.

    In addition to the position settings, feature module authors can define any settings that
    make sense for their functionality, such as top-level defaults that apply to every position
    unless overridden.

    For more information on how to define these settings, see [sref:Defining a Feature Menu Entry].

    For more information on how this setting is used internally and how to define a feature that can
    support these menu items, see [sref:`partials.menu` in Defining Features].

    <!-- Reference Links -->
    [sref:`partials.menu` in Defining Features]: platen.site.features.defining.partials.menu
    [sref:`root_section`]: platen.site.display.menu.settings.root_section
    [sref:`before_injection`]: platen.site.display.menu.settings.before_injection
    [sref:`before_hugo_config`]: platen.site.display.menu.settings.before_hugo_config
    [sref:`before_root_section`]: platen.site.display.menu.settings.before_root_section
    [sref:`after_injection`]: platen.site.display.menu.settings.after_injection
    [sref:`after_hugo_config`]: platen.site.display.menu.settings.after_hugo_config
    [sref:`after_root_section`]: platen.site.display.menu.settings.after_root_section
    [sref:Defining a Feature Menu Entry]: platen.site.display.menu.entry
    [sref:features]: platen.site.features.defining
type: object
properties:
  root_section:
    title: Menu Root Section
    description: >-
      Specifies the root section of the content folder to add to the site menu.
    schematize:
      weight: 1
      details: |
        Specifies the root section of the content folder to add to the site menu. You can specify a
        folder path relative to the root of the content folder, like `games` for `content/games`, or
        `projects/releases` for `content/projects/releases`.

        You can specify a single forward slash (`/`) to set the menu's root section to the entire
        content folder.

        If you want to uninclude a page or section from the site menu, set the
        `platen.menu.hide` parameter in the [sref:page] or [sref:section]'s frontmatter to `true`.

        The default value is `/`.

        <!-- Reference Links -->
        [sref:page]: platen.content.page.menu.hide
        [sref:section]: platen.content.section.menu.hide
    type: string
    default: /
  languages_icon:
    title: Languages Icon
    description: Defines the options for the languages icon for selecting translations in a multilingual site.
    schematize:
      weight: 2
      details: |
        This setting defines the options for the languages icon that displays on multilingual sites. The icon displays
        beside the language of the current page in the dropdown entry. When you select the component in the menu,
        Platen displays the list of translations for the current page.
    type: object
    properties:
      name:
        title: Icon Name
        description: The name of the icon.
        schematize:
          weight: 1
          details: |
            This setting specifies the name of the icon to display. You can specify the icon with Platen's shorthand
            syntax for icons.

            The shorthand syntax for icons in Platen is `<name>[&<variant>][@<library>]`, where:

            - `<name>` is mandatory and represents the name of the icon.
            - `&<variant>` is optional and represents the variant of the icon. Not all icons and libraries support
              variants. When you specify a variant in this syntax, you must specify it after the icon's name. You must
              separate the variant from the icon name with an ampersand (`&`). When you don't specify a variant, Platen
              uses the library's default variant.
            - `&<library>` is optional and represents the library the icon belongs to. When you specify a library in
              this syntax, you must specify it after the icon's name and variant. You must separate the library from
              the icon name or variant with an at sign (`@`). When you don't specify a library, Platen uses the
              configured default library.

            You can always use [sref:any valid icon] in Shoelace's default icon library.

            If you specify the icon's variant or library with the shorthand syntax, don't specify the [sref:`variant`]
            or [sref:`library`] settings for this icon.

            The default icon for this setting is: ![icon:translate][default]

            [sref:any valid icon]: sl.component:icon?default-icons
            [default]: builtin_bootstrap "The 'translate' icon from the builtin bootstrap icon library from Shoelace."
        type: string
        default: translate@builtin_bootstrap
      library:
        title: Icon Library
        description: The library the icon is in.
        schematize:
          weight: 2
          details: |
            This setting specifies the library to load the icon from. You can use any of the registered icon libraries.
            If you don't specify a value for this setting, Platen uses the `features.shoelace.icons.default_library`
            setting's value as the library.

            Don't specify this setting if you're including the library in the `name` setting with the shorthand syntax.
        oneOf:
          - enum:
            - builtin_bootstrap
            - boxicons
            - font_awesome
            - heroicons
            - iconoir
            - ionicons
            - jam_icons
            - lucide
            - material_icons
            - remix_icon
            - tabler_icons
            - unicons
          - type: string
      variant:
        title: Icon Variant
        description: The icon variant.
        schematize:
          weight: 3
          details: |
            This setting specifies the icon's variant. Not all icons and libraries have variants. If this value isn't
            set, the icon uses its default variant.

            Don't specify this setting if you're including the variant in the `name` setting with the shorthand syntax.
        type: string
      src:
        title: Icon SVG Source
        description: The source for a custom icon.
        schematize:
          weight: 4
          details: |
            This setting specifies the URL to an SVG file to use as a custom icon. If you specify this value, Platen
            ignores the settings for the `name`, `library`, and `variant` settings.
        type: string
      use_legacy:
        title: Use Legacy Languages Icon
        description: Choose whether to use the legacy SVG icon or the configurable shoelace icon.
        schematize:
          weight: 99
          details: |
            Use this setting to choose whether to use the legacy implementation for the languages icon. The current
            default value is `true`, which renders the default icon and ignores all other settings for the language
            icon.
            
            In the future, the default value will change to `false`. Later, this setting will be removed and only the
            new implementation will be available. We strongly recommend you update this setting to `false` and adjust
            your site's theme as needed.
        type: boolean
        default: true
  before_injection:
    title: Feature Entries Before Menu Injection 
    description: Define entries at the beginning of the site menu.
    type: object
    schematize:
      weight: 90
      skip_schema_render: true
      details: |
        This setting allows you to add menu entries for the feature at the very top of the site
        menu, after the brand and search section.

        When the menu partial is called, this value is passed to the partial along with the
        current page's context.
    properties:
      group:
        $ref: ./group.yaml
        schematize:
          weight: 1
      entries:
        title: Entries
        description: >-
          Define one or more entries to include at this position.
        schematize:
          weight: 4
          details: |
            You must define at least one entry to include at this position. A position without any
            entries isn't processed, even if [sref:`group`] is defined.

            <!-- Reference Links -->
            [sref:`group`]: platen.site.display.menu.settings.pattern-positional.group
        type: array
        items:
          $ref: ./entry.yaml
          schematize:
            details: |
              An entry must define either the [sref:`feature`] or the [sref:`group`] and
              [sref:`Entries`] settings.

              Entries with the [sref:`feature`] setting are individual entries that leverage a
              partial defined by a Platen feature.

              Entries with the [sref:`group`] setting acommodate a nested list of entries (defined
              in [sref:`entries`]) in the menu, using this entry as the parent container.

              <!-- Reference Links -->
              [sref:`entries`]: platen.site.display.menu.entry.entries
              [sref:`feature`]: platen.site.display.menu.entry.feature
              [sref:`group`]: platen.site.display.menu.entry.group
  before_hugo_config:
    title: Feature Entries Before Hugo Menu Configuration Entries
    description: Define feature menu entries after injection and before configured entries.
    type: object
    schematize:
      weight: 91
      skip_schema_render: true
      details: |
        This setting allows you to add menu entries for the feature after any from the injection
        partial but before the entries from the `menu.before` setting in Hugo's configuration
        file.

        When the menu partial is called, this value is passed to the partial along with the
        current page's context.
    properties:
      group:
        $ref: ./group.yaml
        schematize:
          weight: 1
      entries:
        title: Entries
        description: >-
          Define one or more entries to include at this position.
        schematize:
          weight: 4
          details: |
            You must define at least one entry to include at this position. A position without any
            entries isn't processed, even if [sref:`group`] is defined.

            <!-- Reference Links -->
            [sref:`group`]: platen.site.display.menu.settings.pattern-positional.group
        type: array
        items:
          $ref: ./entry.yaml
          schematize:
            details: |
              An entry must define either the [sref:`feature`] or the [sref:`group`] and
              [sref:`Entries`] settings.

              Entries with the [sref:`feature`] setting are individual entries that leverage a
              partial defined by a Platen feature.

              Entries with the [sref:`group`] setting acommodate a nested list of entries (defined
              in [sref:`entries`]) in the menu, using this entry as the parent container.

              <!-- Reference Links -->
              [sref:`entries`]: platen.site.display.menu.entry.entries
              [sref:`feature`]: platen.site.display.menu.entry.feature
              [sref:`group`]: platen.site.display.menu.entry.group
  before_root_section:
    title: Feature Entries Before Main Menu Entries
    description: Define feature menu entries after configured entries and before automatic ones.
    type: object
    schematize:
      weight: 92
      skip_schema_render: true
      details: |
        This setting allows you to add menu entries for the feature after the entries from the
        `menu.before` setting in Hugo's configuration file but before the content added from the
        root content section by Platen.

        When the menu partial is called, this value is passed to the partial along with the
        current page's context.
    properties:
      group:
        $ref: ./group.yaml
        schematize:
          weight: 1
      entries:
        title: Entries
        description: >-
          Define one or more entries to include at this position.
        schematize:
          weight: 4
          details: |
            You must define at least one entry to include at this position. A position without any
            entries isn't processed, even if [sref:`group`] is defined.

            <!-- Reference Links -->
            [sref:`group`]: platen.site.display.menu.settings.pattern-positional.group
        type: array
        items:
          $ref: ./entry.yaml
          schematize:
            details: |
              An entry must define either the [sref:`feature`] or the [sref:`group`] and
              [sref:`entries`] settings.

              Entries with the [sref:`feature`] setting are individual entries that leverage a
              partial defined by a Platen feature.

              Entries with the [sref:`group`] setting acommodate a nested list of entries (defined
              in [sref:`entries`]) in the menu, using this entry as the parent container.

              <!-- Reference Links -->
              [sref:`entries`]: platen.site.display.menu.entry.entries
              [sref:`feature`]: platen.site.display.menu.entry.feature
              [sref:`group`]: platen.site.display.menu.entry.group
  after_root_section:
    title: Feature Entries After Main Menu Entries
    description: Define feature menu entries after automatic entries and before configured ones.
    type: object
    schematize:
      weight: 93
      skip_schema_render: true
      details: |
        This setting allows you to add menu entries for the feature after the content added from
        the root content section by Platen but before the entries from the `menu.after` setting
        in Hugo's configuration file.

        When the menu partial is called, this value is passed to the partial along with the
        current page's context.
    properties:
      group:
        $ref: ./group.yaml
        schematize:
          weight: 1
      entries:
        title: Entries
        description: >-
          Define one or more entries to include at this position.
        schematize:
          weight: 4
          details: |
            You must define at least one entry to include at this position. A position without any
            entries isn't processed, even if [sref:`group`] is defined.

            <!-- Reference Links -->
            [sref:`group`]: platen.site.display.menu.settings.pattern-positional.group
        type: array
        items:
          $ref: ./entry.yaml
          schematize:
            details: |
              An entry must define either the [sref:`feature`] or the [sref:`group`] and
              [sref:`entries`] settings.

              Entries with the [sref:`feature`] setting are individual entries that leverage a
              partial defined by a Platen feature.

              Entries with the [sref:`group`] setting acommodate a nested list of entries (defined
              in [sref:`entries`]) in the menu, using this entry as the parent container.

              <!-- Reference Links -->
              [sref:`entries`]: platen.site.display.menu.entry.entries
              [sref:`feature`]: platen.site.display.menu.entry.feature
              [sref:`group`]: platen.site.display.menu.entry.group
  after_hugo_config:
    title: Feature Entries After Menu Configuration Entries
    description: Define feature menu entries after configured entries and before injection.
    type: object
    schematize:
      weight: 94
      skip_schema_render: true
      details: |
        This setting allows you to add menu entries for the feature after the entries from the
        `menu.after` setting in Hugo's configuration file but before the injection partial.

        When the menu partial is called, this value is passed to the partial along with the
        current page's context.
    properties:
      group:
        $ref: ./group.yaml
        schematize:
          weight: 1
      entries:
        title: Entries
        description: >-
          Define one or more entries to include at this position.
        schematize:
          weight: 4
          details: |
            You must define at least one entry to include at this position. A position without any
            entries isn't processed, even if [sref:`group`] is defined.

            <!-- Reference Links -->
            [sref:`group`]: platen.site.display.menu.settings.pattern-positional.group
        type: array
        items:
          $ref: ./entry.yaml
          schematize:
            details: |
              An entry must define either the [sref:`feature`] or the [sref:`group`] and
              [sref:`entries`] settings.

              Entries with the [sref:`feature`] setting are individual entries that leverage a
              partial defined by a Platen feature.

              Entries with the [sref:`group`] setting acommodate a nested list of entries (defined
              in [sref:`entries`]) in the menu, using this entry as the parent container.

              <!-- Reference Links -->
              [sref:`entries`]: platen.site.display.menu.entry.entries
              [sref:`feature`]: platen.site.display.menu.entry.feature
              [sref:`group`]: platen.site.display.menu.entry.group
  after_injection:
    title: Feature Entries After Menu Injection
    description: Define feature menu entries at the end of the site menu.
    type: object
    schematize:
      weight: 95
      skip_schema_render: true
      details: |
        This setting allows you to add menu entries for the feature at the very bottom of the
        site menu after everything else.

        When the menu partial is called, this value is passed to the partial along with the
        current page's context.
    properties:
      group:
        $ref: ./group.yaml
        schematize:
          weight: 1
      entries:
        title: Entries
        description: >-
          Define one or more entries to include at this position.
        schematize:
          weight: 4
          details: |
            You must define at least one entry to include at this position. A position without any
            entries isn't processed, even if [sref:`group`] is defined.

            <!-- Reference Links -->
            [sref:`group`]: platen.site.display.menu.settings.pattern-positional.group
        type: array
        items:
          $ref: ./entry.yaml
          schematize:
            details: |
              An entry must define either the [sref:`feature`] or the [sref:`group`] and
              [sref:`entries`] settings.

              Entries with the [sref:`feature`] setting are individual entries that leverage a
              partial defined by a Platen feature.

              Entries with the [sref:`group`] setting acommodate a nested list of entries (defined
              in [sref:`entries`]) in the menu, using this entry as the parent container.

              <!-- Reference Links -->
              [sref:`entries`]: platen.site.display.menu.entry.entries
              [sref:`feature`]: platen.site.display.menu.entry.feature
              [sref:`group`]: platen.site.display.menu.entry.group
